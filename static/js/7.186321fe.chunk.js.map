{"version":3,"sources":["pages/factorial.js","components/alertMessage.js"],"names":["ModalFactorial","lazy","ModalWithSuspense","withSuspense","Factorial","getFactorial","i","useForm","register","handleSubmit","errors","setValue","useState","isLoading","setIsLoading","memoShowModal","useMemo","console","group","localStorage","getItem","log","groupEnd","header_page","factorial","className","message","onSubmit","data","arr_fact","item_arr","f","num","push","setItem","JSON","stringify","find_fact","Control","id","type","placeholder","name","ref","required","max","value","pattern","Text","AlertMessage","props","state","undefined","this","setState","nextProps","nextState","variant","Component"],"mappings":"wMAcMA,EAAeC,gBAAK,kBAAI,uDAExBC,EAAkBC,YAAaH,GAkGtBI,UAhGC,WAEf,IAAMC,EAAa,SAAbA,EAAcC,GAAD,OAAU,IAAJA,EAAS,EAAKA,EAAED,EAAaC,EAAE,IADzD,EAkB+CC,cAAvCC,EAlBR,EAkBQA,SAASC,EAlBjB,EAkBiBA,aAAaC,EAlB9B,EAkB8BA,OAAOC,EAlBrC,EAkBqCA,SAlBrC,EAmBmCC,oBAAS,GAnB5C,mBAmBWC,EAnBX,KAmBqBC,EAnBrB,KAqCUC,EAAcC,mBAAQ,WAI3B,OAFAC,QAAQC,MAAM,0BAEVL,GAAaM,aAAaC,QAAQ,oBAErCH,QAAQI,IAAI,aAAaR,GACzBI,QAAQI,IAAI,yCAAyCF,aAAaC,QAAQ,oBAC1EH,QAAQK,YACD,IAGRL,QAAQI,IAAI,yCAAyCF,aAAaC,QAAQ,oBAC1EH,QAAQI,IAAI,aAAaR,GACzBI,QAAQK,YACD,KACN,CAACT,IAEH,OACI,eAAC,IAAD,WACC,iCACEU,YAAY,KAAK,qBAGfb,EAAOc,WACP,qBAAKC,UAAU,YAAf,SACC,cAAC,IAAD,CAAcC,QAAShB,EAAOc,UAAUE,YAI1C,8BACEX,GAAiB,cAACb,EAAD,MAInB,eAAC,IAAD,CAAMuB,UAAU,OAAOE,SAAUlB,GAnD1B,SAAAmB,GAEdX,QAAQC,MAAM,YACdJ,GAAa,GACbG,QAAQI,IAAR,oBAAyBR,IACzBI,QAAQI,IAAIO,GAvBA,SAAAA,GACZ,IAAD,EACCX,QAAQC,MAAM,aAEd,IADA,IAAIW,EAAS,GACLvB,EAAE,EAAEA,GAAGsB,EAAKtB,IACpB,CACC,IACOwB,EAAS,CAACC,EADXzB,EACa0B,IADP3B,EAAaC,IAEtBuB,EAASI,KAAKH,IAEhB,EAAAb,SAAQI,IAAR,SAAY,UAAZ,OAAwBQ,IACxBV,aAAae,QAAQ,kBAAkBC,KAAKC,UAAUP,IACtDZ,QAAQK,WAaVe,CAAUT,EAAKJ,WAEfb,EAAS,YAAY,IAExBG,GAAa,GACbG,QAAQI,IAAR,oBAAyBR,IACzBI,QAAQK,cAsCE,UACC,cAAC,IAAKgB,QAAN,CAAcC,GAAG,kBAAkBC,KAAK,OAAOC,YAAY,iCAAiCC,KAAK,YACjGC,IAAKnC,EAAS,CAACoC,SAAS,oBACnBC,IAAI,CACHC,MAAM,IACNpB,QAAQ,qEAEPqB,QAAQ,CACPD,MAAM,oBACNpB,QAAQ,sEAKzB,qBAAKD,UAAU,WAAf,SACC,cAAC,IAAKuB,KAAN,CAAWT,GAAG,YAAd,SA/FM,6I,2FCRLU,E,kDAEL,WAAYC,GACX,IAAD,8BACC,cAAMA,IACDC,MACL,CACCzB,aAAQ0B,GAJV,E,qDAQA,WAECnC,QAAQI,IAAI,qBACZgC,KAAKC,SACL,CACC5B,QAAQ2B,KAAKH,MAAMxB,Y,iCAIrB,SAAoB6B,EAAUC,GAE7BvC,QAAQC,MAAM,uBACXqC,EAAU7B,UAAU8B,EAAU9B,SAEhCT,QAAQI,IAAI,yCACZgC,KAAKC,SACL,CACC5B,QAAQ2B,KAAKH,MAAMxB,WAIb6B,EAAU7B,UAAU8B,EAAU9B,SAErCT,QAAQI,IAAI,yCAEbJ,QAAQK,a,oBAGT,WAEC,OACC,8BACC,cAAC,IAAD,CAAOmC,QAAQ,SAAf,SACEJ,KAAKF,MAAMzB,gB,GA5CUgC,aAoDZT","file":"static/js/7.186321fe.chunk.js","sourcesContent":["import {useForm} from 'react-hook-form';\r\nimport React,{useState,useMemo,lazy} from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nimport header_page from '../components/header_page';\r\nimport AlertMessage from '../components/alertMessage';\r\n\r\nimport StylesPage from '../styledComponents/StylesPage';\r\n\r\nimport withSuspense from '../hoc/withSuspense';\r\n\r\nconst hint=`Input only number >0 and <171 without chars. This number must not start with zero. \r\nAfter input press Enter on your keyboard.`;\r\n\r\nconst ModalFactorial=lazy(()=>import('../components/modalFactorial'));\r\n\r\nconst ModalWithSuspense=withSuspense(ModalFactorial);\r\n\r\nconst Factorial=()=>\r\n{\r\n\tconst getFactorial=(i)=>(i===1) ? 1 : (i*getFactorial(i-1));\r\n\r\n\tconst find_fact=data=>\r\n    {\r\n    \tconsole.group(\"find_fact\");\r\n    \tlet arr_fact=[];\r\n    \tfor(let i=1;i<=data;i++)\r\n    \t{\r\n    \t\tlet f=i,num=getFactorial(i);\r\n\t        let item_arr={f,num};\r\n\t        arr_fact.push(item_arr);\r\n      \t}\r\n      \tconsole.log(\"array:\",...arr_fact);\r\n      \tlocalStorage.setItem('array_factorial',JSON.stringify(arr_fact));\r\n      \tconsole.groupEnd();\r\n    }\r\n\t\r\n\tconst {register,handleSubmit,errors,setValue}=useForm();\r\n    const [isLoading,setIsLoading]=useState(false);\r\n\r\n    const onSubmit=data=>\r\n    {\r\n    \tconsole.group(\"onSubmit\");\r\n    \tsetIsLoading(true);\r\n    \tconsole.log(`isLoading:${isLoading}`);\r\n\t    console.log(data);\r\n\t    \r\n\t    find_fact(data.factorial);\r\n\t    \r\n\t    setValue(\"factorial\",\"\");\r\n\t\t\r\n\t\tsetIsLoading(false);\r\n\t\tconsole.log(`isLoading:${isLoading}`);\r\n\t\tconsole.groupEnd();\r\n    }\r\n\r\n    const memoShowModal=useMemo(()=>\r\n    {\r\n    \tconsole.group(\"memoShowModal=useMemo\");\r\n    \t\r\n    \tif(!isLoading && localStorage.getItem('array_factorial'))\r\n    \t{\r\n    \t\tconsole.log(\"isLoading:\"+isLoading);\r\n    \t\tconsole.log(\"localStorage.getItem(array_factorial):\"+localStorage.getItem('array_factorial'));\r\n    \t\tconsole.groupEnd();\r\n    \t\treturn true;\r\n    \t}\r\n\r\n    \tconsole.log(\"localStorage.getItem(array_factorial):\"+localStorage.getItem('array_factorial'));\r\n    \tconsole.log(\"isLoading:\"+isLoading);\r\n    \tconsole.groupEnd();\r\n    \treturn false;\r\n    },[isLoading]);\r\n\r\n    return(\r\n        <StylesPage>\r\n        \t<header>\r\n        \t\t{header_page(\"h1\",\"Find Factorial.\")}\r\n        \t</header>\r\n            \r\n            {errors.factorial && \r\n            \t<div className=\"div_alert\">\r\n            \t\t<AlertMessage message={errors.factorial.message}/>\r\n            \t</div>\r\n            }\r\n\r\n            <div>\r\n            \t{memoShowModal && <ModalWithSuspense/>}\r\n            </div>\r\n            \r\n            \r\n            <Form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n            \t<Form.Control id=\"factorial_count\" type=\"text\" placeholder=\"input number to find factorial\" name=\"factorial\" \r\n            \tref={register({required:\"Input is required\",\r\n\t                \tmax:{\r\n\t                \t\tvalue:170,\r\n\t                \t\tmessage:\"Max value must be >170 because that factorial of >170 is infinity\"\r\n\t                \t},\r\n\t                  \tpattern:{\r\n\t                    value:/^[1-9]{1}[0-9]*$/i,\r\n\t                    message:\"Input only number >0 without chars and mustn't start with zero\"\r\n\t                  \t}\r\n\t                })}\t\t\t\t\r\n                />\r\n               \r\n\t\t\t\t<div className=\"div_hint\">\r\n\t\t\t\t\t<Form.Text id=\"hint_fact\">{hint}</Form.Text>\r\n\t\t\t\t</div>\r\n            </Form>\r\n\r\n        </StylesPage>\r\n    );\r\n}\r\n\r\nexport default Factorial;","import React,{Component} from 'react';\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nclass AlertMessage extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state=\r\n\t\t{\r\n\t\t\tmessage:undefined\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconsole.log(\"componentDidMount\");\r\n\t\tthis.setState(\r\n\t\t{\r\n\t\t\tmessage:this.props.message\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUpdate(nextProps,nextState)\r\n\t{\r\n\t\tconsole.group(\"componentWillUpdate\");\r\n\t\tif(nextProps.message!==nextState.message)\r\n\t\t{\r\n\t\t\tconsole.log(\"nextProps.message!==nextState.message\");\r\n\t\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tmessage:this.props.message\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\telse if(nextProps.message===nextState.message)\r\n\t\t{\r\n\t\t\tconsole.log(\"nextProps.message===nextState.message\");\r\n\t\t}\r\n\t\tconsole.groupEnd();\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Alert variant=\"danger\">\r\n\t\t\t\t\t{this.state.message}\r\n\t\t\t\t</Alert>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default AlertMessage;"],"sourceRoot":""}